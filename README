En este informe Modificaremos xv6 para implementar un sistema de protección de memoria que permita marcar regiones de memoria como solo lectura.

_Primero en  syscall.h, agregué las definiciones de las syscalls SYS_mprotect y SYS_munprotect.
_ Definí las funciones sys_mprotect y sys_munprotect para manejar la extracción y validación de los argumentos antes de llamar a las funciones correspondientes en proc.c:
uint64 sys_mprotect(void);
uint64 sys_munprotect(void);
- En proc.c, implementé las funciones mprotect y munprotect que recorren la tabla de páginas, modificando las entradas para ajustar los permisos de las páginas de memoria:
int mprotect(void *addr, int len);
int munprotect(void *addr, int len);
-finalmente Implementé un archivo test.c que usa las nuevas syscalls para probar su funcionamiento.

Problemas encontrados y soluciones

-Se presentó un error por la ubicación de los archivos en carpetas distintas.
Utilicé el comando brew install riscv-software-src/riscv/riscv-gnu-toolchain para especificar la ubicación exacta del toolchain.
-El proceso de instalación, especialmente del toolchain, fue muy lento.
Reinicié la instalación varias veces y consideré usar Homebrew para acelerar el proceso.